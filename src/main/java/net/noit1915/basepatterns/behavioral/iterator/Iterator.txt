Итератор(Iterator) — это поведенческий паттерн проектирования, который даёт возможность последовательно обходить
 элементы составных объектов, не раскрывая их внутреннего представления.
========================================================================================================================
Преимущества и недостатки
 Упрощает классы хранения данных.
 Позволяет реализовать различные способы обхода структуры данных.
 Позволяет одновременно перемещаться по структуре данных в разные стороны.

 Не оправдан, если можно обойтись простым циклом.

 Применимость: Паттерн можно часто встретить в Java-коде, особенно в программах, работающих с разными типами коллекций, и где требуется обход разных сущностей.

 Примеры Итератора в стандартных библиотеках Java:

 Все реализации java.util.Iterator (среди прочего также java.util.Scanner).

 Все реализации java.util.Enumeration.

 Признаки применения паттерна: Итератор легко определить по методам навигации
 (например, получения следующего/предыдущего элемента и т. д.). Код использующий итератор зачастую вообще не имеет
 ссылок на коллекцию,
 с которой работает итератор. Итератор либо принимает коллекцию в параметрах конструктора при создании, либо
 возвращается самой коллекцией.