Стратегия(Strategy) — это поведенческий паттерн проектирования, который определяет семейство схожих алгоритмов и помещает
каждый из них в собственный класс, после чего алгоритмы можно взаимозаменять прямо во время исполнения программы.
========================================================================================================================
Преимущества и недостатки
 Горячая замена алгоритмов на лету.
 Изолирует код и данные алгоритмов от остальных классов.
 Уход от наследования к делегированию.
 Реализует принцип открытости/закрытости.

 Усложняет программу за счёт дополнительных классов.
 Клиент должен знать, в чём состоит разница между стратегиями, чтобы выбрать подходящую.

 Применимость: Стратегия часто используется в Java-коде, особенно там, где нужно подменять алгоритм во время
 выполнения программы. Начиная с Java 8, многие примеры стратегии можно заменить простыми lambda-выражениями.

 Примеры Стратегии в стандартных библиотеках Java:

 java.util.Comparator#compare(), вызываемые из Collections#sort().

 javax.servlet.http.HttpServlet: метод service(), а также все методы doXXX() принимают объекты
 HttpServletRequest и HttpServletResponse в параметрах.

 javax.servlet.Filter#doFilter()

 Признаки применения паттерна: Класс делегирует выполнение вложенному объекту абстрактного типа или интерфейса.