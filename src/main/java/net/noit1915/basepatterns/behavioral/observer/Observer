Наблюдатель(Издатель-Подписчик, Слушатель, Observer) — это поведенческий паттерн проектирования,
который создаёт механизм подписки, позволяющий однимобъектам следить и реагировать на события, происходящие в других объектах.
========================================================================================================================
Преимущества и недостатки
 Издатели не зависят от конкретных классов подписчиков и наоборот.
 Вы можете подписывать и отписывать получателей на лету.
 Реализует принцип открытости/закрытости.

 Подписчики оповещаются в случайном порядке.

 Применимость: Наблюдатель можно часто встретить в Java коде, особенно там, где применяется событийная модель
 отношений между компонентами. Наблюдатель позволяет отдельным компонентам реагировать на события, происходящие в других компонентах.

 Примеры Наблюдателя в стандартных библиотеках Java:

 java.util.Observer/java.util.Observable (редко используется в реальной жизни)
 Все реализации java.util.EventListener (практически во всём Swing-е)
 javax.servlet.http.HttpSessionBindingListener
 javax.servlet.http.HttpSessionAttributeListener
 javax.faces.event.PhaseListener
 Признаки применения паттерна: Наблюдатель можно определить по механизму подписки и методам оповещения,
  которые вызывают компоненты программы.