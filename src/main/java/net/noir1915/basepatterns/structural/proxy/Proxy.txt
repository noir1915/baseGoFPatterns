Proxy(Заместитель) — это объект, который выступает прослойкой между клиентом и реальным сервисным объектом.
Заместитель получает вызовы от клиента, выполняет свою функцию (контроль доступа, кеширование, изменение запроса и прочее),
 а затем передаёт вызов сервисному объекту.
========================================================================================================================
Преимущества и недостатки
 Позволяет контролировать сервисный объект незаметно для клиента.
 Может работать, даже если сервисный объект ещё не создан.
 Может контролировать жизненный цикл служебного объекта.
 
 Усложняет код программы из-за введения дополнительных классов.
 Увеличивает время отклика от сервиса.

 Применимость: Паттерн Заместитель применяется в Java коде тогда, когда надо заменить настоящий объект его суррогатом,
  причём незаметно для клиентов настоящего объекта. Это позволит выполнить какие-то добавочные поведения до или после
  основного поведения настоящего объекта.

 Примеры Заместителя в стандартных библиотеках Java:

 java.lang.reflect.Proxy
 java.rmi.*
 javax.ejb.EJB (см. комментарии)
 javax.inject.Inject (см. комментарии)
 javax.persistence.PersistenceContext
 Признаки применения паттерна: Класс заместителя чаще всего делегирует всю настоящую работу своему реальному объекту.
 Заместители часто сами следят за жизненным циклом своего реального объекта.