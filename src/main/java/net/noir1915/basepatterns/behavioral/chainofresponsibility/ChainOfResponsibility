Цепочка обязанностей — это поведенческий паттерн проектирования, который позволяет передавать запросы последовательно
по цепочке обработчиков. Каждый последующий обработчик решает, может ли он обработать запрос сам и стоит
ли передавать запрос дальше по цепи.
========================================================================================================================
Преимущества и недостатки
 Уменьшает зависимость между клиентом и обработчиками.
 Реализует принцип единственной обязанности.
 Реализует принцип открытости/закрытости.

 Запрос может остаться никем не обработанным.

 Применимость: Паттерн встречается в Java не так уж часто, так как для его применения нужна цепь объектов, например,
 связанный список.

 Область применения цепочки обязанностей — всевозможные обработчики событий, последовательные проверки доступа и прочее.

 Примеры Цепочки обязанностей в стандартных библиотеках Java:

 java.util.logging.Logger#log()
 javax.servlet.Filter#doFilter()
 Признаки применения паттерна: Цепочку обязанностей можно определить по спискам обработчиков или проверок,
 через которые пропускаются запросы. Особенно если порядок следования обработчиков важен.